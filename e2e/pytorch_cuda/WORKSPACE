workspace(name = "custom_registry_example")

load("@bazel_tools//tools/build_defs/repo:http.bzl", "http_archive")

local_repository(
    name = "rules_oci",
    path = "../../",
)

load("@rules_oci//oci:dependencies.bzl", "rules_oci_dependencies")

# Fetch our "runtime" dependencies which users need as well
rules_oci_dependencies()

load("@rules_oci//oci:repositories.bzl", "LATEST_CRANE_VERSION", "LATEST_ZOT_VERSION", "oci_register_toolchains")

oci_register_toolchains(
    name = "oci",
    crane_version = LATEST_CRANE_VERSION,
    # zot_version = LATEST_ZOT_VERSION,
)

# rules_pkg
http_archive(
    name = "rules_pkg",
    sha256 = "451e08a4d78988c06fa3f9306ec813b836b1d076d0f055595444ba4ff22b867f",
    urls = [
        "https://mirror.bazel.build/github.com/bazelbuild/rules_pkg/releases/download/0.7.1/rules_pkg-0.7.1.tar.gz",
        "https://github.com/bazelbuild/rules_pkg/releases/download/0.7.1/rules_pkg-0.7.1.tar.gz",
    ],
)

load("@rules_pkg//:deps.bzl", "rules_pkg_dependencies")

rules_pkg_dependencies()

load("@rules_oci//oci:pull.bzl", "oci_pull")

oci_pull(
    name = "pytorch_cuda_11_7",
    digest = "sha256:3ee7f11e5df44d04b64a82dd8170c840062af726cb9a39c0c7b48f448b8751a8",
    image = "index.docker.io/nvidia/cuda",
)

_DEB_TO_LAYER = """\
alias(
    name = "layer",
    actual = ":data.tar.xz",
    visibility = ["//visibility:public"],
)
"""

http_archive(
    name = "bash_amd64",
    build_file_content = _DEB_TO_LAYER,
    urls = [
        "http://ftp.us.debian.org/debian/pool/main/b/bash/bash_5.1-2+deb11u1_amd64.deb",
    ],
    sha256 = "f702ef058e762d7208a9c83f6f6bbf02645533bfd615c54e8cdcce842cd57377",
)
